<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DataApp</name>
    </assembly>
    <members>
        <member name="M:DataApp.Controllers.CarController.Get">
            <summary>
            A demo endpoint that returns the first 5 cars from the Main.CarsDB table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataApp.Controllers.CarController.Get(System.Int64)">
            <summary>
            Returns a car from the Main.CarsDB by car id.
            </summary>
            <param name="id">the car id (Rowid) in the database.</param>
            <returns></returns>
        </member>
        <member name="M:DataApp.Controllers.CarController.Update(DataApp.Models.Car)">
            <summary>
            Updates an existing car's details in the Main.CarsDB table.
            </summary>
            <param name="car">The updated car details</param>
            <returns>Returns the car after being updated.</returns>
        </member>
        <member name="M:DataApp.Controllers.CarController.Post(DataApp.Models.Car)">
            <summary>
            Adds a new car to the Main.CarsDB table.
            </summary>
            <param name="car"></param>
            <returns>Returns the car with the rowid populated.</returns>
        </member>
        <member name="M:DataApp.Controllers.CarController.Delete(System.Int32)">
            <summary>
            Deletes a car from the Main.CarsDB by car id.
            </summary>
            <param name="id">the car id (Rowid) in the database.</param>
            <returns>boolean whether the car has been deleted.</returns>
        </member>
        <member name="M:DataApp.Controllers.CarController.Search(DataApp.Models.CarSearchParameters)">
            <summary>
            Searchs the Main.CarsDB by any combination of manufacturer, model, and condition. This will return the first 10 cars.
            </summary>
            <remarks>If more than one search value is used the query will use the AND operator to filter results.</remarks>
            <param name="carSearchParameters"></param>
            <returns></returns>
        </member>
        <member name="M:DataApp.Controllers.SellController.PostQuestion(System.Int64,System.String)">
            <summary>
            Addes a new questions to a listing. If listing does not exist yet in the mongo db, it will create a new document for it
            </summary>
            <param name="listingId"></param>
            <param name="question"></param>
            <returns></returns>
        </member>
        <member name="M:DataApp.Controllers.SellController.PostReply(System.Int64,System.Int64,System.String)">
            <summary>
            Addes a reply to a question on a listing
            </summary>
            <param name="listingId"></param>
            <param name="questionId"></param>
            <param name="reply"></param>
            <returns></returns>
        </member>
        <member name="M:DataApp.Controllers.SellController.Get(System.Int64)">
            <summary>
            Display all questions and their replies for a listing
            </summary>
            <param name="listingId"></param>
            <returns></returns>
        </member>
        <member name="M:DataApp.Controllers.UserController.Get">
            <summary>
            Returns all users from the Main.Users table.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DataApp.Controllers.UserController.Get(System.Int32)">
            <summary>
            Returns a user from the Main.Users by user id.
            </summary>
            <param name="id">the user id (UserId) in the database.</param>
            <returns></returns>
        </member>
        <member name="M:DataApp.Controllers.UserController.Post(DataApp.Models.User)">
            <summary>
            Adds a new user to the Main.Users table.
            </summary>
            <param name="car"></param>
            <returns>Returns the user with the UserId populated.</returns>
        </member>
        <member name="M:DataApp.Controllers.UserController.Delete(System.Int32)">
            <summary>
            Deletes a user from the Main.Users by user id.
            </summary>
            <param name="id">the user id (UserID) in the database.</param>
            <returns>boolean whether the user has been deleted.</returns>
        </member>
        <member name="M:DataApp.Controllers.UserController.Authenticate(DataApp.Models.UserAuthenticationRequest)">
            <summary>
            Authenticats a user using its username and password
            </summary>
            <param name="request">a request that contains the username and password</param>
            <returns>boolean whether the user has been authenticated.</returns>
        </member>
        <member name="M:DataApp.Controllers.UserController.Owns(DataApp.Models.Car,System.Int32)">
            <summary>
            Links a car to a user. This is a transactional process, if any part of the workflow fails the
            database transaction will rollback.
            </summary>
            <param name="car">car's details</param>
            <param name="id">user id</param>
            <returns></returns>
        </member>
        <member name="M:DataApp.Controllers.UserController.Cars(System.Int32)">
            <summary>
            Retrieves all cars that owned by a user.
            </summary>
            <param name="id">The user id to get cars for</param>
            <returns></returns>
        </member>
        <member name="M:DataApp.Models.Car.AsInsertQuery">
            <summary>
            Generates an insert statement
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
